Many steps have been migrated to new style from old style.

This only affects users who use steps as base classes for their own steps.
New style steps provide a completely different set of functions that may be overridden.
Direct instantiation of step classes is not affected.
Old and new style steps work exactly the same in that case and users don't need to do anything.

The old-style steps have been deprecated since Buildbot v0.9.0 released in October 2016.
The support for old-style steps will be removed entirely Buildbot v3.0.0 which will be released in near future.
Users are advised to upgrade their custom steps to new-style steps as soon as possible.

A gradual migration path is provided for steps that are likely to be used as base classes.
Users need to inherit from ``<StepName>NewStyle`` class and convert all overridden APIs to use new-style step APIs.
The old-style ``<StepName>`` classes will be provided until Buildbot v3.0.0 release.
In Buildbot v3.0.0 ``<StepName>`` will refer to new-style steps and will be equivalent to ``<StepName>NewStyle``.
``<StepName>NewStyle`` aliases will be removed in Buildbot v3.2.0.

The list of old-style steps that have new-style equivalents for gradual migration is as follows:

 - ``Configure`` (new-style equivalent is ``ConfigureNewStyle``)
 - ``Compile`` (new-style equivalent is ``CompileNewStyle``)
 - ``HTTPStep`` (new-style equivalent is ``HTTPStepNewStyle``)
 - ``GET``, ``PUT``, ``POST``, ``DELETE``, ``HEAD``, ``OPTIONS`` (new-style equivalent is ``GETNewStyle``, ``PUTNewStyle``, ``POSTNewStyle``, ``DELETENewStyle``, ``HEADNewStyle``, ``OPTIONSNewStyle``)
 - ``MasterShellCommand`` (new-style equivalent is ``MasterShellCommandNewStyle``)
 - ``ShellCommand`` (new-style equivalent is ``ShellCommandNewStyle``)
 - ``SetPropertyFromCommand`` (new-style equivalent is ``SetPropertyFromCommandNewStyle``)
 - ``WarningCountingShellCommand`` (new-style equivalent is ``WarningCountingShellCommandNewStyle``)
 - ``Test`` (new-style equivalent is ``TestNewStyle``)

The list of old-style steps that have been converted to new style without a gradual migration path is as follows:

 - ``BuildEPYDoc``
 - ``CopyDirectory``
 - ``DebLintian``
 - ``DebPbuilder``
 - ``DirectoryUpload``
 - ``FileDownload``
 - ``FileExists``
 - ``FileUpload``
 - ``HLint``
 - ``JsonPropertiesDownload``
 - ``JsonStringDownload``
 - ``LogRenderable``
 - ``MakeDirectory``
 - ``MaxQ``
 - ``Mock``
 - ``MockBuildSRPM``
 - ``MsBuild``, ``MsBuild4``, ``MsBuild12``, ``MsBuild14``, ``MsBuild141``
 - ``MultipleFileUpload``
 - ``PerlModuleTest``
 - ``PyFlakes``
 - ``PyLint``
 - ``RemoveDirectory``
 - ``RemovePYCs``
 - ``RpmLint``
 - ``RpmBuild``
 - ``SetPropertiesFromEnv``
 - ``Sphinx``
 - ``StringDownload``
 - ``TreeSize``
 - ``Trial``
 - ``VC6``, ``VC7``, ``VC8``, ``VC9``, ``VC10``, ``VC11``, ``VC12``, ``VC14``, ``VC141``
 - ``VS2003``, ``VS2005``, ``VS2008``, ``VS2010`, ``VS2012``, ``VS2013``, ``VS2015``, ``VS2017``

Additionally, all source steps have been migrated to new style without a gradual migration path.
Ability to be used as base classes was not documented and thus is considered unsupported.
Please submit any custom steps to Buildbot for inclusion into the main tree to reduce maintenance burden.
Additionally, bugs can be submitted to expose needed APIs publicly for which a migration path will be provided in the future.

The list of old-style source steps that have been converted to new style is as follows:

 - ``Bzr``
 - ``CVS``
 - ``Darcs``
 - ``Gerrit``
 - ``Git``
 - ``GitCommit``
 - ``GitLab``
 - ``GitPush``
 - ``GitTag``
 - ``Monotone``
 - ``Mercurial``
 - ``P4``
 - ``Repo``
 - ``Source``
 - ``SVN``
